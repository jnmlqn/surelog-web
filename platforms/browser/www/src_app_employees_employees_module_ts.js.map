{"version":3,"sources":["./src/app/employees/employees-routing.module.ts","./src/app/employees/employees.module.ts","./src/app/employees/employees.page.ts","./src/app/employees/employees.page.scss","./src/app/employees/employees.page.html"],"names":[],"mappings":"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","file":"src_app_employees_employees_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesPage } from './employees.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmployeesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EmployeesPage } from './employees.page';\r\n\r\nimport { EmployeesPageRoutingModule } from './employees-routing.module';\r\n\r\nimport { SharedComponentsModule } from '../components/shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EmployeesPageRoutingModule,\r\n    SharedComponentsModule\r\n  ],\r\n  declarations: [\r\n    EmployeesPage\r\n  ]\r\n})\r\nexport class EmployeesPageModule {}\r\n","import { ApiService } from '../services/api/api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ControllerService } from '../services/controller/controller.service';\r\n\r\n@Component({\r\n    selector: 'app-employees',\r\n    templateUrl: './employees.page.html',\r\n    styleUrls: ['./employees.page.scss'],\r\n})\r\nexport class EmployeesPage implements OnInit {\r\n\r\n    keyword:string = '';\r\n    departments:any = [];\r\n    roles:any = [];\r\n    role_id:string = '';\r\n    department_id:string = '';\r\n    limit:string = '10';\r\n    page: number = 1;\r\n    search: any = null;\r\n    sort_by: string = 'created_at';\r\n    sorting: string = 'desc';\r\n    users:any = {\r\n        data: {\r\n            data: null\r\n        }\r\n    };\r\n    loader: boolean = false;\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private controller: ControllerService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        \r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        this.api.get(`hr-data`)\r\n        .subscribe(\r\n            (res: any) => {                \r\n                this.departments = res.data.departments;\r\n                this.roles = res.data.roles;\r\n            },\r\n            (err: any) => {\r\n                console.log(err);\r\n            }\r\n\r\n        );\r\n        this.getUsers();\r\n    }\r\n\r\n    getUsers() {\r\n        this.loader = true;\r\n        this.api.get(`employees?page=${this.page}&keyword=${this.keyword}&sort_by=${this.sort_by}&sorting=${this.sorting}&department_id=${this.department_id}&role_id=${this.role_id}&limit=${this.limit}`)\r\n        .subscribe(\r\n            (res: any) => {\r\n                this.loader = false;\r\n                this.users = res;\r\n            },\r\n            (err: any) => {\r\n                this.loader = false;\r\n                this.controller.showErrorAlert(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteEmployee(user) {\r\n        let buttons = [\r\n            {\r\n                text: 'Yes',\r\n                handler: () => {\r\n                    this.controller.presentLoading('Deleting, please wait...').then((loading) => {\r\n                        this.api.post(`employees/delete/${user.id}`, null)\r\n                        .subscribe(\r\n                            (res: any) => {\r\n                                loading.dismiss();\r\n                                this.controller.presentAlert('Success', res.message);\r\n                                let i = this.users.data.data.indexOf(user);\r\n                                this.users.data.data.splice(i, 1);\r\n                            },\r\n                            (err: any) => {\r\n                                loading.dismiss();\r\n                                this.controller.showErrorAlert(err);\r\n                            }\r\n                        )\r\n                    });\r\n                }\r\n            }, \r\n            {\r\n                text: 'no'\r\n            }\r\n        ];\r\n\r\n        this.controller.presentAlert('Warning', 'Are you sure to delete this employee?', buttons);\r\n    }\r\n\r\n    paginate(page) {\r\n        if(page == 'pagination.previous') {\r\n            this.page--;\r\n        } else if(page == 'pagination.next') {\r\n            this.page++;\r\n        } else {\r\n            this.page = page;\r\n        }\r\n\r\n        this.getUsers();\r\n    }\r\n\r\n    startSearch() {\r\n        this.page = 1;\r\n        clearTimeout(this.search);\r\n        this.search = setTimeout(() => {\r\n            this.getUsers();\r\n        }, 1000);\r\n    }\r\n\r\n    sortData(sort_by) {\r\n        this.sort_by = sort_by;\r\n        this.sorting = this.sorting == 'desc' ? 'asc' : 'desc';\r\n        this.getUsers();\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbXBsb3llZXMucGFnZS5zY3NzIn0= */\";","export default \"<app-navbar [title]=\\\"'EMPLOYEES'\\\" [icon]=\\\"'people-outline'\\\" [loader]=\\\"loader\\\">\\r\\n    <div content>\\r\\n        Browse Employees\\r\\n        <br><br>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3 mt-1\\\">\\r\\n                <label>Search</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"keyword\\\" placeholder=\\\"Search\\\" (input)=\\\"startSearch()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 mt-1\\\">\\r\\n                <label>Filter by Role</label>\\r\\n                <ion-select placeholder=\\\"Select Role\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"role_id\\\" (ionChange)=\\\"getUsers()\\\">\\r\\n                    <ion-select-option value=\\\"\\\">All Roles</ion-select-option>\\r\\n                    <ion-select-option value=\\\"{{role.id}}\\\" *ngFor=\\\"let role of roles\\\">\\r\\n                        {{role.name}}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 mt-1\\\">\\r\\n                <label>Filter by Department</label>\\r\\n                <ion-select placeholder=\\\"Select Department\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"department_id\\\" (ionChange)=\\\"getUsers()\\\">\\r\\n                    <ion-select-option value=\\\"\\\">All Departments</ion-select-option>\\r\\n                    <ion-select-option value=\\\"{{department.id}}\\\" *ngFor=\\\"let department of departments\\\">\\r\\n                        {{department.name}}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 mt-1\\\">\\r\\n                <br>\\r\\n                <button class=\\\"surelog-btn secondary-bg shadow border-0 right\\\" routerLink=\\\"/employees/create\\\">\\r\\n                    <ion-icon name=\\\"add-outline\\\"></ion-icon>\\r\\n                    &nbsp;\\r\\n                    <label>New Employee</label>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <br><br>\\r\\n        <div style=\\\"overflow: auto\\\">\\r\\n            <table class=\\\"table table-hover table-borderless data-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"text-muted\\\">\\r\\n                            <span class=\\\"pointer sort\\\" (click)=\\\"sortData('email')\\\">\\r\\n                                Email\\r\\n                                <ion-icon name=\\\"chevron-{{sorting == 'desc' && sort_by == 'email' ? 'down' : 'up'}}-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </th>\\r\\n                        <th class=\\\"text-muted\\\">\\r\\n                            <span class=\\\"pointer sort\\\" (click)=\\\"sortData('employee_id')\\\">\\r\\n                                Employee Number\\r\\n                                <ion-icon name=\\\"chevron-{{sorting == 'desc' && sort_by == 'employee_id' ? 'down' : 'up'}}-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </th>\\r\\n                        <th class=\\\" text-muted\\\">\\r\\n                            <span class=\\\"pointer sort\\\" (click)=\\\"sortData('first_name')\\\">\\r\\n                                First Name\\r\\n                                <ion-icon name=\\\"chevron-{{sorting == 'desc' && sort_by == 'first_name' ? 'down' : 'up'}}-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </th>\\r\\n                        <th class=\\\" text-muted\\\">\\r\\n                            <span class=\\\"pointer sort\\\" (click)=\\\"sortData('last_name')\\\">\\r\\n                                Last Name\\r\\n                                <ion-icon name=\\\"chevron-{{sorting == 'desc' && sort_by == 'last_name' ? 'down' : 'up'}}-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </th>\\r\\n                        <th class=\\\" text-muted\\\">\\r\\n                            Role\\r\\n                        </th>\\r\\n                        <th class=\\\" text-muted\\\">\\r\\n                            Department\\r\\n                        </th>\\r\\n                        <th class=\\\" text-muted\\\">\\r\\n                            Action\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let user of users.data.data\\\" class=\\\"bg-light data-row\\\">\\r\\n                        <th>{{user.email}}</th>\\r\\n                        <th>{{user.employee_id ? user.employee_id : 'N/A'}}</th>\\r\\n                        <th>{{user.first_name}}</th>\\r\\n                        <th>{{user.last_name}}</th>\\r\\n                        <th>{{user.role_id ? user.role_id.name : 'N/A'}}</th>\\r\\n                        <th>{{user.department_id ? user.department_id.name : 'N/A'}}</th>\\r\\n                        <th>\\r\\n                            <span class=\\\"pointer text-primary\\\" title=\\\"Edit\\\" style=\\\"font-size: 1.5em;\\\" routerLink=\\\"/employees/{{user.id}}/edit\\\">\\r\\n                                <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <span class=\\\"pointer text-danger\\\" title=\\\"Delete\\\" style=\\\"font-size: 1.5em;\\\" (click)=\\\"deleteEmployee(user)\\\">\\r\\n                                <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                    <tr class=\\\"bg-light data-row\\\">\\r\\n                        <th>\\r\\n                            <div class=\\\"row g-3 align-items-center\\\">\\r\\n                                <div class=\\\"col-auto\\\">\\r\\n                                    <label class=\\\"col-form-label\\\">Show</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-auto p-0\\\">\\r\\n                                    <ion-select placeholder=\\\"Results Per Page\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"limit\\\" (ionChange)=\\\"paginate(1)\\\">\\r\\n                                        <ion-select-option value=\\\"5\\\">5</ion-select-option>\\r\\n                                        <ion-select-option value=\\\"10\\\">10</ion-select-option>\\r\\n                                        <ion-select-option value=\\\"15\\\">15</ion-select-option>\\r\\n                                        <ion-select-option value=\\\"20\\\">20</ion-select-option>\\r\\n                                    </ion-select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-auto\\\">\\r\\n                                <span>\\r\\n                                    per page\\r\\n                                </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </th>\\r\\n                        <th colspan=\\\"6\\\" style=\\\"vertical-align: middle !important;\\\">\\r\\n                            <div class=\\\"right\\\" *ngIf=\\\"users.data.last_page > 1\\\">\\r\\n                                <button class=\\\"btn shadow m-1 paginate-btn {{link.active ? 'active' : ''}}\\\" [disabled]=\\\"link.url == null\\\" *ngFor=\\\"let link of users.data.links\\\" (click)=\\\"paginate(link.label)\\\">\\r\\n                                    {{link.label == 'pagination.previous' ? '<' : (link.label == 'pagination.next' ? '>' : link.label)}}\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</app-navbar>\";"],"sourceRoot":"webpack:///"}